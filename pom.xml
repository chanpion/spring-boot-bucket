<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.chanpion</groupId>
    <artifactId>spring-boot-bucket</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    <modules>
        <module>admin</module>
        <module>redis-proxy</module>
        <module>netty</module>
        <module>redis-proxy-monitor</module>
        <module>mybatis</module>
        <module>samples</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <spring-boot.version>2.0.5.RELEASE</spring-boot.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.8.1</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <!--把class打包jar作为附件-->
                        <attachClasses>true</attachClasses>
                        <!--打包的时候不使用WEB-INF/classes,这样会把项目的java文件打包成jar放到WEB-INF/lib内-->
                        <archiveClasses>true</archiveClasses>
                        <!--设置jar包名字，如果A中没有定义该名字，那么名字为classes-->
                        <classesClassifier>api</classesClassifier>
                        <!--
                        相同点：
                            packagingExcludes与webResources 均可以排除某些文件。
                        不同点：
                            packagingExcludes针对拷贝到target后的资源进行处理。
                            webResources针对编译前的资源进行处理。
                        -->
                        <packagingExcludes>WEB-INF/classes/**/**</packagingExcludes>
                        <webResources>
                            <resource>
                                <directory>target/${project.artifactId}/WEB-INF/classes</directory>
                                <excludes>
                                    <exclude>**/**</exclude>
                                </excludes>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>